// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Path = require("path");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");
var Belt_MapInt = require("rescript/lib/js/belt_MapInt.js");

var empty = Belt_MapInt.fromArray([
      [
        0,
        0
      ],
      [
        1,
        0
      ],
      [
        2,
        0
      ],
      [
        3,
        0
      ],
      [
        4,
        0
      ],
      [
        5,
        0
      ],
      [
        6,
        0
      ],
      [
        7,
        0
      ],
      [
        8,
        0
      ]
    ]);

function simulateDay(map) {
  return Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(Belt_MapInt.set(map, 0, Belt_MapInt.getWithDefault(map, 1, 0)), 1, Belt_MapInt.getWithDefault(map, 2, 0)), 2, Belt_MapInt.getWithDefault(map, 3, 0)), 3, Belt_MapInt.getWithDefault(map, 4, 0)), 4, Belt_MapInt.getWithDefault(map, 5, 0)), 5, Belt_MapInt.getWithDefault(map, 6, 0)), 6, Belt_MapInt.getWithDefault(map, 7, 0) + Belt_MapInt.getWithDefault(map, 0, 0) | 0), 7, Belt_MapInt.getWithDefault(map, 8, 0)), 8, Belt_MapInt.getWithDefault(map, 0, 0));
}

function simulateDays(_map, _count) {
  while(true) {
    var count = _count;
    var map = _map;
    if (count === 0) {
      return map;
    }
    _count = count - 1 | 0;
    _map = simulateDay(map);
    continue ;
  };
}

function incrementKey(map, k) {
  if (k !== undefined) {
    return Belt_MapInt.set(map, k, Belt_MapInt.getWithDefault(map, k, 0) + 1 | 0);
  } else {
    return map;
  }
}

function parseInput(s) {
  return Belt_Array.reduce(Belt_Array.map(s.split(","), Belt_Int.fromString), empty, incrementKey);
}

function partOne(input) {
  console.log("Part I:", Belt_MapInt.reduce(simulateDays(parseInput(input), 80), 0, (function (count, param, v) {
              return count + v | 0;
            })));
  
}

function partTwo(input) {
  console.log("Part II:", Belt_MapInt.reduce(simulateDays(parseInput(input), 256), 0, (function (count, param, v) {
              return count + v | 0;
            })));
  
}

function readLines(filename) {
  return Fs.readFileSync(Path.resolve("06", filename)).toString();
}

var testLines = readLines("test.txt");

var data = readLines("data.txt");

console.log("Test");

partOne(testLines);

partTwo(testLines);

console.log("\n");

console.log("Actual");

partOne(data);

partTwo(data);

exports.empty = empty;
exports.simulateDay = simulateDay;
exports.simulateDays = simulateDays;
exports.incrementKey = incrementKey;
exports.parseInput = parseInput;
exports.partOne = partOne;
exports.partTwo = partTwo;
exports.readLines = readLines;
exports.testLines = testLines;
exports.data = data;
/* empty Not a pure module */
